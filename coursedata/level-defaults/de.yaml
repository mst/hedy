---
  1:
    intro_text: "Willkommen bei Hedy! In Level 1 könnt du die Befehle `print`, `ask` und `echo` verwenden. Drückst du die blaue Taste und der Code wird für du eingegeben! Probiert du den Code selbst mit der grünen Schaltfläche 'Code ausführen' unter dem linken Programmierfeld aus."
    start_code: "print Hallo Welt!"
    commands:
      -
        name: "print"
        explanation: "Gib etwas mit `print` aus."
        example: "Beispiel: print Hallo willkommen bei Hedy!"
        demo_code: "print Hallo willkommen bei Hedy!"
      -
        name: "ask"
        explanation: "Frage etwas mit `ask`."
        example: "Beispiel: ask Was ist deine Lieblingsfarbe?"
        demo_code: "ask Was ist deine Lieblingsfarbe?"
      -
        name: "echo"
        explanation: "Wiederhole etwas mit `echo`."
        example: "Beispiel: echo Also deine Lieblingsfarbe ist ..."
        demo_code: "ask Was ist deine Lieblingsfarbe?\necho Also deine Lieblingsfarbe ist ..."
  2:
    intro_text: "`print` funktioniert immer noch wie in Stufe 1, aber `ask` hat sich geändert und braucht jetzt einen Namen, den du dann ausgeben kannst. `echo` wird nicht mehr benötigt. Du kannst jetzt zusätzlich diese Befehle verwenden:"
    start_code: "print Hallo Welt!"
    commands:
      -
        name: "is"
        explanation: "Gib einem Wort einen Namen, den du in deinem Programm verwenden kannst."
        example: "Beispiel: name is Hedy."
        demo_code: "name is Hedy\nprint Willkommen name"
      -
        name: "ask"
        explanation: "Frage etwas mit `ask`. Achtung! Du müsst der Antwort einen Namen mit `is` geben."
        example: "Beispiel: farbe is ask Was ist deine Lieblingsfarbe?"
        demo_code: "farbe is ask Was ist deine Lieblingsfarbe?\nprint farbe ist dir am liebsten!"
      -
        name: "choose_random"
        explanation: "Wähle mit `at` und `random` zufällig ein Wort aus einer Gruppe aus."
        example: "Beispiel: tiere is Hund, Katze, Känguru."
        demo_code: "tiere is Hund, Katze, Känguru\nprint tiere at random"
  3:
    start_code: "print 'Hallo Welt'"
    intro_text: "`ask` ist in Level 3 immer noch dasselbe, aber` print` ist jetzt anders. Du müsset Text, den du buchstäblich drucken möchten, in Anführungszeichen setzen."
    commands:
      -
        name: "print"
        explanation: "Genaue Ausgabe mit Anführungszeichen."
        example: "Beispiel: print 'Hallo. Willkommen bei Hedy.'"
        demo_code: "print 'Hallo. Willkommen bei Hedy.'"
      -
        name: "is"
        explanation: "Gib einem Text einen Namen und gib ihn ohne Anführungszeichen aus."
        example: "Beispiel: name is Hedy."
        demo_code: "name is Hedy\nprint 'Ich heisse ' name"
      -
        name: "ask"
        explanation: "Frage etwas mit `ask`. "
        example: "Beispiel: farbe is ask Was ist deine Lieblingsfarbe?"
        demo_code: "farbe is ask Was ist deine Lieblingsfarbe?\nprint farbe ' ist dir am liebsten!'"
  4:
    start_code: "name is ask Wie heisst du?\nif name is Hedy print 'Cool!' else print 'Bäh'"
    intro_text: "`ask` und `print` funktionieren genau wie in Stufen 3. In Stufe 4 kommt der `if` Befehl dazu!"
    commands:
      -
        name: "print"
        explanation: "Genaue Ausgabe mit Anführungszeichen."
        example: "Beispiel: print 'Hallo. Willkommen bei Hedy.'"
        demo_code: "print 'Hallo. Willkommen bei Hedy.'"
      -
        name: "ask"
        explanation: "Frage etwas mit `ask`. "
        example: "Beispiel: farbe is ask Was ist deine Lieblingsfarbe?"
        demo_code: "farbe is ask Was ist deine Lieblingsfarbe?\nprint farbe ' ist dir am liebsten!'"
      -
        name: "if"
        explanation: "Treffe eine Auswahl mit `if` und `else`"
        example: "Beispiel: if farbe is green print 'Hübsch!' else print 'Bäh'"
        demo_code: "farbe is ask Was ist deine Lieblingsfarbe?\nif farbe is green print 'Hübsch!' else print 'Bäh'"
  5:
    start_code: "repeat 3 times print 'Hedy macht Spaß!'"
    intro_text: "`ask`, `print` und `if` funktionieren genau wie in Stufe 4. Aber in Stufe 5 kommt der `repeat` Befehl dazu. `repeat` kann verwendet werden um eine Befehlszeile mehrmals auszuführen."
    commands:
      -
        name: "print"
        explanation: "Genaue Ausgabe mit Anführungszeichen."
        example: "Beispiel: print 'Hallo. Willkommen bei Hedy.'"
        demo_code: "print 'Hallo. Willkommen bei Hedy.'"
      -
        name: "ask"
        explanation: "Frage etwas mit `ask`."
        example: "Beispiel: farbe is ask Was ist deine Lieblingsfarbe?"
        demo_code: "farbe is ask Was ist deine Lieblingsfarbe?\nprint farbe ' ist dir am liebsten!'"
      -
        name: "if"
        explanation: "Treffe eine Auswahl mit `if` und `else`"
        example: "Beispiel: if farbe is green print 'Hübsch!' else print 'Bäh'"
        demo_code: "farbe is ask Was ist deine Lieblingsfarbe?\nif farbe is green print 'Hübsch!' else print 'Bäh'"
      -
        name: "repeat"
        explanation: "`repeat` und `if` kombiniert"
        example: "Beispiel: if farbe is grün repeat 3 times print 'Hübsch!' else repeat 5 times print 'Bäh'"
        demo_code: "farbe is ask Was ist deine Lieblingsfarbe?\nif farbe is grün repeat 3 times print 'Hübsch!' else repeat 5 times print 'Bäh'"
  6:
    start_code: "print '5 mal 5 ist ' 5 * 5"
    intro_text: "`ask`, `print`, `if` und `repeat` sind immer noch gleich wie in Stufe 4 und 5. In Stufe 6 kommt etwas neues hinzu... Du kannst jetzt rechnen."
    commands:
      -
        name: "print"
        explanation: "Genaue Ausgabe mit Anführungszeichen."
        example: "Beispiel: print '5 mal 5 ist ' 5 * 5"
        demo_code: "print '5 mal 5 ist ' 5 * 5"
      -
        name: "`ask` und `if` mit Berechnungen"
        explanation: "Frage nach einer Rechenaufgabe."
        example: "Beispiel: antwort is ask Was ist 10 plus 10?"
        demo_code: "antwort is ask Was ist 10 plus 10?\nif answer is 20 print 'Ja!' else print 'Ups'"
      -
        name: "repeat"
        explanation: "`repeat` und `if` kombiniert"
        example: "Beispiel: if antwort is 50 repeat 3 times print 'Richtig!' else repeat 5 times print 'Ups'"
        demo_code: "antwort is ask Was ist 5 mal 10?\nif antwort is 50 repeat 3 times print 'Richtig!' else repeat 5 times print 'Ups'"
  7:
    start_code: "repeat 5 times\n    print 'Hello Leute'\n    print 'Das wird 5 mal ausgegeben'"
    intro_text: "`ask` und `print` funktionieren immer noch wie du sie kennst. Aber `if` und `repeat` haben sich verändert! Du kannst jetzt Befehlsgruppen zusammen ausführen, aber du musst die Befehle einrücken. Das heisst, du musst die Befehlszeile mit vier Leerzeichen beginnen. Das gilt auch, wenn du einen Block mit nur einer Zeile schreiben möchtest. Wenn du einen `repeat`- und `if`-Befehl kombinierst, musst du jeden Block einrücken. Schau dir die Beispielprogramme an, um es genauer zu sehen!"
    commands:
      -
        name: "print"
        explanation: "Gib etwas aus. Denke daran, Anführungszeichen für eine wörtliche Ausgabe zu verwenden."
        example: "Beispiel: print '5 mal 5 ist ' 5 * 5"
        demo_code: "print '5 mal 5 ist ' 5 * 5"
      -
        name: "`if` mit mehreren Zeilen"
        explanation: "Frage nach einer Summe und prüfe, ob die Antwort richtig ist. Wir können jetzt zwei Zeilen ausgeben."
        example: "Beispiel: antwort is ask Was ist 5 plus 5?"
        demo_code: "antwort is ask Was ist 5 plus 5?\nif antwort is 10\n    print 'Gut gemacht!'\n    print 'Die Antwort ist wirklich ' antwort\nelse\n    print 'Ups!'\n    print 'Die Antwort is 10'"
      -
        name: "`if` und `repeat` kombiniert"
        explanation: "`if` und `repeat` kombiniert"
        example: "Beispiel: if farbe is grün repeat 3 times print 'Hübsch!' else repeat 5 times print 'Bäh'"
        demo_code: "farbe is ask Was ist deine Lieblingsfarbe?\nif farbe is grün\n    repeat 3 times\n        print 'Hübsch!'\nelse\n    repeat 5 times\n        print 'Bäh'"
  8:
    start_code: "for i in range 1 to 10\n    print i\nprint 'Auf die Plätze, fertig, los!'"
    intro_text:
      "`print` funktioniert wie bisher, aber `repeat` ist heißt `for`!
      Du schreibst `for i in range 1 to 5` anstatt `repeat 5 times`. Du kannst `i` auch in deinem Programm benutzen!
      Vergiss nicht, Einrückungen nach `for` und `if` zu verwenden (Das bedeutet, den Satz mit vier Leerzeichen zu beginnen)"
    commands:
           -
             explanation: "wir ersetzen `repeat` durch `for`"
             example: "for i in range 1 to 10"
             demo_code: |
               for i in range 1 to 10
                 print i
               print 'Ready or not, here I come!'
  9:
    start_code: "for i in range 1 to 10:\n    print i\nprint 'Auf die Plätze, fertig, los!'"
    intro_text: "Now we are going to change a little bit with indentation. Every time that we need an indentation, we need `:` at the line before the indentation."
    commands:
      - explanation: "When we use a `for`, we need to put a `:` behind the `for` statement!"
        example: "for i in range 1 to 10:"
        demo_code: "for i in range 1 to 11:\n    print i\nprint 'Ready or not, here I come!'"
      - explanation: "We need to do the same with all of our `if` statements"
        example: "if colour is green:'"
        demo_code: "colour is green\nif colour is green:\n    print 'The colour is green'\nelse:\n    print 'The colour is not green'"
      -
        explanation: "We will show you a new command that you are allowed to use: `elif`. `elif` means \"else if\". We start with checking if the `if` is correct, if that one is not true, we check the `elif` and if that one is also not true, we go to the `else`."
        example: "elif a is 5:"
        demo_code: "a is 2\nif a is 1:\n    print 'a is 1'\nelif a is 2:\n    print 'a is 2'\nelse:\n    print 'a is not 1 or 2'"
  10:
    start_code: "for i in range 1 to 3:\n    for j in range 1 to 5:\n    print 'we are in round: ' i ' and we count: ' j"
    intro_text: "From now on, we can repeat a loop more often. In the example we count to 5 and do that 3 times. So we do 3 rounds and count to 5 every time."
    commands:
      - explanation: "This is an example with the for statement"
        demo_code: "for i in range 1 to 3:\n    for j in range 1 to 5:\n    print 'we are in round: ' i ' and we count: ' j"
      - explanation: "We can do the same with if statements"
        demo_code: "colour is blue\ncolourtwo is yellow\nif colour is blue:\n    if colourtwo is yellow:\n        print 'Together we make green!'"
  11:
    start_code: "age is input('What is your age?')\nprint('So you have been these ages:')\nfor i in range(0,age):\n    print(i)"
    intro_text: "We are going to put round brackets and we are going to change ask! We change ask into input! At print, ask and for, we are going to put round brackets now."
    commands:
      - explanation: "We are going to put brackets around print now!"
        example: "For example: print('Hello World')"
        demo_code: "print('Hello World')"
      - explanation: "We remove ask and call it input now, also we are going to put brackets around it"
        example: "For example: answer is input('What is your name?')"
        demo_code: "answer = input('What is your name?')\nprint('So your name is ' answer)"
      - explanation: "We are now putting brackets around the numbers in the for loop. for i in range (0,10):"
        example: "For example: for i in range(0,10):"
        demo_code: "for i in range(0,10):\n    print(i)\nprint('Ready or not, here I come')"

  12:
    start_code: "fruit is ['apple', 'banana', 'cherry']\nprint(fruit)"
    intro_text: "We are going to put square brackets around lists! Also we now need to put single quotation marks (') around items in lists. "
    commands:
      - explanation: "We are going to put square brackets around lists! We also need to put ' around items in lists."
        example: "For example: fruit is ['apple', 'banana', 'cherry']"
        demo_code: "fruit is ['apple', 'banana', 'cherry']\nprint(fruit)"
      - name: "Get an item from a list"
        explanation: "To get an item from a list we use [number] so fruit[1] means, get the first fruit from the list!"
        example: "For example: firstfruit is fruit[1]"
        demo_code: "fruit is ['banana', 'apple', 'cherry']\nfirstfruit is fruit[1]\nprint(firstfruit)"
      - name: "Get an random item from a list"
        explanation: "To get a random item from a list we use [random] so fruit[random] means, get a random fruit from the list!"
        example: "For example: randomfruit is fruit[random]"
        demo_code: "fruit is ['banana', 'apple', 'cherry']\nrandomfruit is fruit[random]\nprint(randomfruit)"
  13:
    start_code: "print('What is 5+3?')\nanswer = 5+3\nprint('answer is now:')\nprint(answer)\nif answer == 8:\n  print('That is correct!')\nelse:\n  print('Oh no, that is wrong!')"
    intro_text: "Now we are going to change is into = and ==. We use = if we want to assign a value to a variable. If you want to assign 8 to the variable called answer, we do answer = 8. == we use when we want to see if two things are the same."
    commands:
      - name: "Compare"
        explanation: "If we want to compare, we use ==. 5+3 == 8 checks if 5+3 equals 8"
        example: "For example: 5+3 == 8"
        demo_code: "if 5+3 == 8:\n    print('5+3 is indeed 8')\nelse:\n  print('This will not be printed because 5+3 is 8!')"
      - name: "Assign Value"
        explanation: "If we want to say that a variable called answer is 8, we do answer = 8."
        example: "For example: answer = 8"
        demo_code: "print('What is 5+3?')\nanswer = 5+3\nprint('answer is now:')\nprint(answer)"
      - name: "Compare and assign value"
        explanation: "If we are going to compare two values, we use ==. If we are going to assign a variable, we use =. "
        example: "For example: 5+3 == 8, answer = 8"
        demo_code: "print('What is 5+3?')\nanswer = 5+3\nprint('answer is now:')\nprint(answer)\nif answer == 8:\n  print('That is correct!')\nelse:\n  print('No, that is wrong!')"

